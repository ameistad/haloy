name: Build and Release

on:
  push:
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  packages: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: false

      - name: Run tests
        run: go test -v ./...

  build-and-publish:
    name: Build and Publish
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: false

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}-haloyd
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=long
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push haloyd image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./build/haloyd/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build CLI tools for multiple platforms
        env:
          VERSION: ${{ github.ref_name }}
        run: |
          mkdir -p dist
          PLATFORMS=("linux/amd64" "linux/arm64" "darwin/amd64" "darwin/arm64" "windows/amd64")
          BINARIES=("haloy" "haloyadm")

          for binary in "${BINARIES[@]}"; do
            for platform in "${PLATFORMS[@]}"; do
              IFS="/" read -r -a parts <<< "$platform"
              GOOS="${parts[0]}"
              GOARCH="${parts[1]}"

              OUTPUT_NAME="$binary-${GOOS}-${GOARCH}"
              if [ "$GOOS" == "windows" ]; then
                OUTPUT_NAME+=".exe"
              fi

              echo "Building $binary for $GOOS/$GOARCH..."
              GOOS=$GOOS GOARCH=$GOARCH go build -ldflags="-s -w -X 'github.com/ameistad/haloy/internal/version.Version=${VERSION}'" -o "dist/$OUTPUT_NAME" ./cmd/$binary
            done
          done

          # Create checksums for all built artifacts
          cd dist
          sha256sum * > checksums.txt
          cd ..

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: haloy-binaries
          path: dist/

  release:
    name: Create Release
    needs: build-and-publish
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: haloy-binaries
          path: dist/

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/haloy-linux-amd64
            dist/haloy-linux-arm64
            dist/haloy-darwin-amd64
            dist/haloy-darwin-arm64
            dist/haloy-windows-amd64.exe
            dist/haloyadm-linux-amd64
            dist/haloyadm-linux-arm64
            dist/haloyadm-darwin-amd64
            dist/haloyadm-darwin-arm64
            dist/haloyadm-windows-amd64.exe
            dist/checksums.txt
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
